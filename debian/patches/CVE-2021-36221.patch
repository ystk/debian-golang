Origin: https://github.com/golang/go/commit/b7a85e0003cedb1b48a1fd3ae5b746ec6330102e
Reviewed-by: Sylvain Beucler <beuc@debian.org>
Last-Update: 2022-01-21

From b7a85e0003cedb1b48a1fd3ae5b746ec6330102e Mon Sep 17 00:00:00 2001
From: Damien Neil <dneil@google.com>
Date: Wed, 7 Jul 2021 16:34:34 -0700
Subject: [PATCH] net/http/httputil: close incoming ReverseProxy request body

Reading from an incoming request body after the request handler aborts
with a panic can cause a panic, becuse http.Server does not (contrary
to its documentation) close the request body in this case.

Always close the incoming request body in ReverseProxy.ServeHTTP to
ensure that any in-flight outgoing requests using the body do not
read from it.

Updates #46866
Fixes CVE-2021-36221

Change-Id: I310df269200ad8732c5d9f1a2b00de68725831df
Reviewed-on: https://go-review.googlesource.com/c/go/+/333191
Trust: Damien Neil <dneil@google.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Filippo Valsorda <filippo@golang.org>
---
 src/net/http/httputil/reverseproxy.go      |  9 +++++
 src/net/http/httputil/reverseproxy_test.go | 39 ++++++++++++++++++++++
 2 files changed, 48 insertions(+)

Index: golang-1.3.3/src/pkg/net/http/httputil/reverseproxy.go
===================================================================
--- golang-1.3.3.orig/src/pkg/net/http/httputil/reverseproxy.go
+++ golang-1.3.3/src/pkg/net/http/httputil/reverseproxy.go
@@ -102,6 +102,15 @@ func (p *ReverseProxy) ServeHTTP(rw http
 
 	outreq := new(http.Request)
 	*outreq = *req // includes shallow copies of maps, but okay
+	if outreq.Body != nil {
+		// Reading from the request body after returning from a handler is not
+		// allowed, and the RoundTrip goroutine that reads the Body can outlive
+		// this handler. This can lead to a crash if the handler panics (see
+		// Issue 46866). Although calling Close doesn't guarantee there isn't
+		// any Read in flight after the handle returns, in practice it's safe to
+		// read after closing it.
+		defer outreq.Body.Close()
+	}
 
 	p.Director(outreq)
 	outreq.Proto = "HTTP/1.1"
